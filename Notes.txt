https://www.youtube.com/watch?v=tPYj3fFJGjk
https://www.youtube.com/watch?v=QPDsEtUK_D4&pp=qAMBugMGCgJpZBAB
https://www.youtube.com/watch?v=qFJeN9V1ZsI&pp=qAMBugMGCgJpZBAB
https://www.youtube.com/watch?v=tpCFfeUEGs8
https://www.youtube.com/watch?v=Rgpfk6eYxJA&pp=qAMBugMGCgJpZBAB
https://www.youtube.com/watch?v=ZUKz4125WNI

Halo
Drop Potential: <<DONE>>
1. Unnamed: 0
2. Unnamed: 6 (Same as City)
3. id: because each record has its own unique value
4. latitude: cover up by state_code
5. longitude: cover up by state_code
6. zip_code: cover up by city
7. status: same as labels
8. state_code.1: same as state_code
9. object_id: same as id
10. state_code: one hot encoding
11. city
12. name: each row has its own unique values
13. founded_at: turn to age
14. closed_at: turn to age
15. first_funding_at
16. last_funding_at
17. category_code: cover by one hot encoding

Question:
1. age_first_funding_year (pendanaan pertama)
2. age_last_funding_year (pendanaan terakhir)
3. age_first_milestone_year (pencapaian pertama)
4. age_last_milestone_year (pencapaian terakhir)
5. relationship (dengan siapa??)
6. funding_rounds (stage pendanaan)
7. milestones (pencapaian(?))

Features:
1. name
2. city
3. founded_at
4. closed_at
5. first_funding_at
6. last_funding_at
7. funding_total_usd
8. state_code.1 ==> change to state
9. is_(CA, NY, MA, TX, otherstate(change to other)) 5 features
10. category_code ==> change to category
11. is_(software, web, mobile, enterprise, advertising, gamesvideo, ecommerce, biotech, consulting, othercategory(change to other_cat)) 10 features
12. has_VC
13. has_angel
14. has_(roundA, roundB, roundC, roundD) 4 features
15. avg_participants
16. is_top500
17. age

Target:
1. labels

engineering: <<DONE>>
fill in missing values in closed_at with closed_at(max) + 1 day
1. age = (closed_at - founded_at)

categorical = [state_code, zip_code, id, city, Unnamed: 6, name, founded_at, closed_at, first_funding_at, last_funding_at,
state_code.1, category_code, object_id, status]

numerical = [Unnamed: 0, latitude, longitude, labels, age_first_funding_year, age_last_funding_year, age_first_milestone_year, age_last_milestone_year, relationships, funding_rounds,
funding_total_usd, milestones, is_CA, is_NY, is_MA, is_TX, is_otherstate, is_software, is_web, is_mobile, is_enterprise, is_advertising, is_gamesvideo, is_ecommerce, is_biotech, is_consulting,
is_othercategory,has_VC, has_angel, has_roundA, has_roundB, has_roundC, has_roundD, avg_participants, is_top500]

outlier = log_age_first_funding_year
log_age_first_milestone_year, log_age_last_milestone_year, relationships,
log_funding_total_usd, log_avg_participants, log_age

**RANDOM FOREST**
if 80:20
<<accuracy: 81.1>>
<<precision: 78.1>>
<<recall: 95.5>>
<<F1: 85.9>>

if 70:30
<<accuracy: 81.6>>
<<precision: 80.6>>
<<recall: 93.8>>
<<F1: 86.7>>

hyperparameter
<<accuracy: 83.4>>
<<precision: 82.0>>
<<recall: 94.9>>
<<F1: 88.0>>

**DECISION TREE**
if 70:30
<<accuracy: 77.6>>
<<precision: 81.4>>
<<recall: 84.2>>
<<F1: 82.8>>

hyperparameter
<<accuracy: 68.6>>
<<precision: 79.2>>
<<recall: 68.9>>
<<F1: 73.7>>

**LOGREG**
if 70:30
<<accuracy: 75.1>>
<<precision: 73.9>>
<<recall: 91.1>>
<<F1: 81.6>>

hyperparameter
<<accuracy: 60.5>>
<<precision: 60.5>>
<<recall: 100>>
<<F1: 75.4>>

**KNN**
if 70:30
<<accuracy: 70.3>>
<<precision: 71.4>>
<<recall: 84.8>>
<<F1: 77.6>>

hyperparameter
<<accuracy: 81.6>>
<<precision: 78.7>>
<<recall: 95.5>>
<<F1: 86.3>>

**XGBoost**
if 70:30
<<accuracy: 82.2>>
<<precision: 80.2>>
<<recall: 93.8>>
<<F1: 86.4>>

hyperparameter
<<accuracy: 83.2>>
<<precision: 79.6>>
<<recall: 97.3>>
<<F1: 87.6>>


The percentage of successfull startup is 67.39%
The number of startup which predicted success using Random Forest model are 622 out of 923 startups
Score difference between prediction and real percentage is 2.71 %
It's about 25 startups that supposed to be failed but predicted success by the model